stages:
  - test
  - build
  - publish

variables:
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

test:
  stage: test
  image: rustlang/rust:nightly-slim
  before_script:
    - apt-get update && apt-get install -y libsqlite3-dev
  script:
    - cargo test
  rules:
    - when: always

rustdoc:
  stage: build
  image: rustlang/rust:nightly-slim
  before_script:
    - apt-get update && apt-get install -y libsqlite3-dev
  script:
    - cargo doc --no-deps
  artifacts:
    paths:
      - target/doc
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

pages:
  stage: publish
  image: debian:bookworm-slim
  dependencies:
    - rustdoc
  before_script:
    - apt-get update && apt-get install -y coreutils bash
  script:
    - mkdir -p public
    - mv target/doc public/doc
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
